{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","bonusCurrent","rateInput","bicUser","busdUser","bicBalance","busdBalance","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","whitelist","adminAddress","currentAddress","soldDetails","receivedDetails","whiteListResult","whiteListResult2","historyContribute1","historyContribute2","historyContribute3","historyFilter1","historyFilter2","historyFilter3","filter1","filter2","filter3","sumBUSD1","sumBIC1","sumBUSD2","sumBIC2","sumBUSD3","sumBIC3","filterTime","ownerContract1","ownerContract2","ownerContract3","isAdmin","isShowDetails","isShowWhitelist","isShowHistoryContribute","isBuyable","releaseWallet","this","syncStaticData","then","syncContractBalance","syncWhiteListFull","syncHistoryContributeFull","syncContractInfo","syncChangeableData","syncBuyLogs","syncHandleChangeFilter1","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","input","output","owner","adminAddr","bicContract","BeInCoinAbi","busdContract","BEP20Abi","balanceOf","_bicBalance","_busdBalance","utils","fromWei","contract1","contract2","contract3","owner1","owner2","owner3","idoContract","whiteList","console","log","startDecay","deltaDecay","getBlockNumber","blockCurrent","bonus","countDecay","Math","floor","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","Date","amount","bicAmount","user","buyer","busdAmount","addressIDO","topic","axios","get","params","module","action","address","topic0","apikey","response","data","from","to","syncWhiteList","list1","list2","syncTopic","addEvent","mapEvent","Map","addr","substring","parseInt","set","removeEvent","Array","isArray","has","delete","listEvent","entries","keyMap","valueMap","formatDatetime","syncHistoryContributeV2","list3","eventBuy","listBuy","busdNumber","bicNumber","busd","bic","startBlock","start","end","syncTopicRange","valueMonth","sumBIC","sumBUSD","checkAll","indexOf","event","target","name","value","syncHandleChangeFilter2","syncHandleChangeFilter3","updatePrice","send","withdraw","transferOwnership","addToWhitelist","removeToWhitelist","allowance","approve","buy","toWei","releaseBic","details","reduce","r","parseFloat","timestamp","year","getFullYear","month","getMonth","getDate","toString","padStart","getHours","getMinutes","getSeconds","Row","Col","md","Button","onClick","connectWithMetamask","href","style","display","Card","body","CardTitle","tag","Input","type","placeholder","onChange","handleChange","disabled","CardText","addWhiteList","removeWhiteList","showWhitelist","length","Table","map","index","showHistoryContribute","handleChangeFilter1","align","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleChangeFilter2","handleChangeFilter3","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3203ecdc.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BeInCoinAbi from \"./abi/BeinChain.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport axios from \"axios\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            bonusCurrent: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            whitelist: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            whiteListResult: [],\n            whiteListResult2: [],\n            historyContribute1: [],\n            historyContribute2: [],\n            historyContribute3: [],\n            historyFilter1: [],\n            historyFilter2: [],\n            historyFilter3: [],\n            filter1: 'ALL',\n            filter2: 'ALL',\n            filter3: 'ALL',\n            sumBUSD1: 0,\n            sumBIC1: 0,\n            sumBUSD2: 0,\n            sumBIC2: 0,\n            sumBUSD3: 0,\n            sumBIC3: 0,\n            filterTime: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            ownerContract1: '',\n            ownerContract2: '',\n            ownerContract3: '',\n            isAdmin: false,\n            isShowDetails: false,\n            isShowWhitelist: true,\n            isShowHistoryContribute: false,\n            isBuyable: false,\n            releaseWallet: null,\n        }\n    }\n\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n            this.syncWhiteListFull()\n            this.syncHistoryContributeFull()\n            this.syncContractInfo()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n        this.syncHandleChangeFilter1(\"ALL\")\n    }\n\n    connectWithMetamask() {\n        if (window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({method: 'eth_requestAccounts'})\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0],\n                        releaseWallet: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n                    if (this.state.adminAddress === this.state.currentAddress) {\n                        this.state.isAdmin = true\n                    } else {\n                        this.state.isAdmin = true\n                    }\n\n                    window.ethereum.on('accountsChanged', function (addresses) {\n                        self.setState({\n                            currentAddress: addresses[0],\n                            releaseWallet: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncContractInfo() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract1 = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const contract2 = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT2)\n        const contract3 = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT3)\n        let owner1 = await contract1.methods.owner().call()\n        let owner2 = await contract2.methods.owner().call()\n        let owner3 = await contract3.methods.owner().call()\n        this.setState({\n            ownerContract1: owner1,\n            ownerContract2: owner2,\n            ownerContract3: owner3,\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const idoContract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n\n        const whiteList = await idoContract.methods.whitelist(this.state.currentAddress).call()\n        console.log('whiteList: ', whiteList)\n        let startDecay = await idoContract.methods.startDecay().call()\n        let deltaDecay = await idoContract.methods.deltaDecay().call()\n        let blockCurrent = await web3.eth.getBlockNumber()\n        let bonus = 100;\n        if (blockCurrent > startDecay) {\n            let countDecay = Math.floor((blockCurrent - startDecay) / (deltaDecay));\n            if (countDecay < 10) {\n                bonus = 100 - countDecay * 10;\n            } else {\n                bonus = 0;\n            }\n        }\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n            bonusCurrent: bonus,\n            isBuyable: whiteList\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', {fromBlock: 'latest', toBlock: 'latest'})\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.bicAmount,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.busdAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    async syncTopic(addressIDO, topic) {\n        try {\n            const response = await axios.get(process.env.REACT_APP_BSC_SCAN_API, {\n                params: {\n                    module: \"logs\",\n                    action: \"getLogs\",\n                    address: addressIDO,\n                    topic0: topic,\n                    apikey: process.env.REACT_APP_BSC_SCAN_API_TOKEN,\n                }\n            });\n            return response.data.result;\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async syncTopicRange(addressIDO, topic, from, to) {\n        try {\n            const response = await axios.get(process.env.REACT_APP_BSC_SCAN_API, {\n                params: {\n                    module: \"logs\",\n                    action: \"getLogs\",\n                    fromBlock: from,\n                    toBlock: to,\n                    address: addressIDO,\n                    topic0: topic,\n                    apikey: process.env.REACT_APP_BSC_SCAN_API_TOKEN,\n                }\n            });\n            return response.data.result;\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async syncWhiteListFull() {\n        let list1 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT)\n        let list2 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT2)\n        this.setState({\n            whiteListResult: list1,\n            whiteListResult2: list2,\n        })\n    }\n\n    async syncWhiteList(addressIDO) {\n        let addEvent = await this.syncTopic(addressIDO, '0xaf031152c1a6c5d679409baa43923a71689187e8c73f3e9b156b411d011a1fe0') // add wl\n        let mapEvent = new Map()\n        addEvent.forEach(e => {\n            let data = e.data\n            let addr = '0x' + data.substring(26, 66)\n            let time = parseInt('0x' + data.substring(122, 131))\n            mapEvent.set(addr, time);\n        })\n        let removeEvent = await this.syncTopic(addressIDO, '0x732404ef841efeaff56d1e6eaf5fadebab6b9c973698f5dcee406980b3498f38') // remove wl\n        if (Array.isArray(removeEvent)) {\n            removeEvent.forEach(e => {\n                let data = e.data\n                let addr = '0x' + data.substring(26, 66)\n                let time = parseInt('0x' + data.substring(122, 131))\n                if (mapEvent.has(addr)) {\n                    let tempTime = mapEvent.get(addr)\n                    if (time > tempTime) {\n                        mapEvent.delete(addr)\n                    }\n                }\n            })\n        }\n        let listEvent = []\n        for (const [keyMap, valueMap] of mapEvent.entries()) {\n            listEvent.push({\n                time: this.formatDatetime(valueMap),\n                address: keyMap,\n            })\n        }\n        return listEvent;\n    }\n\n    async syncHistoryContributeFull() {\n        let list1 = await this.syncHistoryContributeV2(process.env.REACT_APP_IDO_CONTRACT)\n        let list2 = await this.syncHistoryContributeV2(process.env.REACT_APP_IDO_CONTRACT2)\n        let list3 = await this.syncHistoryContributeV2(process.env.REACT_APP_IDO_CONTRACT3)\n        this.setState({\n            historyContribute1: list1,\n            historyContribute2: list2,\n            historyContribute3: list3,\n        })\n    }\n\n    async syncHistoryContribute(addressIDO) {\n        let eventBuy = await this.syncTopic(addressIDO, '0xebdbbd9ad9f8301392fafec9c34b3d92288ebfc5a5811c398b9ba01ce36e1590') // buy\n        let listBuy = []\n        eventBuy.forEach(e => {\n            let data = e.data\n            let buyer = '0x' + data.substring(26, 66)\n            let busdNumber = parseInt('0x' + data.substring(67, 130)) / (1e18)\n            let bicNumber = parseInt('0x' + data.substring(131, 194)) / (1e18)\n            let time = this.formatDatetime(parseInt('0x' + data.substring(249, 258)))\n            listBuy.push({\n                buyer: buyer,\n                busd: busdNumber,\n                bic: bicNumber,\n                time: time,\n            })\n        })\n        return listBuy\n    }\n\n    async syncHistoryContributeV2(addressIDO) {\n        let listBuy = []\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        let blockCurrent = await web3.eth.getBlockNumber()\n        let startBlock = 8745746;\n        while (startBlock < blockCurrent) {\n            let start = startBlock;\n            let end = startBlock + 432000;\n            let eventBuy = await this.syncTopicRange(addressIDO, '0xebdbbd9ad9f8301392fafec9c34b3d92288ebfc5a5811c398b9ba01ce36e1590', start, end) // buy\n            eventBuy.forEach(e => {\n                let data = e.data\n                let buyer = '0x' + data.substring(26, 66)\n                let busdNumber = parseInt('0x' + data.substring(67, 130)) / (1e18)\n                let bicNumber = parseInt('0x' + data.substring(131, 194)) / (1e18)\n                let time = this.formatDatetime(parseInt('0x' + data.substring(249, 258)))\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            })\n            startBlock = end+1;\n        }\n        return listBuy\n    }\n\n    async syncHandleChangeFilter1(valueMonth) {\n        let listBuy = []\n        let sumBIC = 0\n        let sumBUSD = 0\n        let checkAll = false\n        if (valueMonth === \"ALL\") {\n            checkAll = true\n        }\n        this.state.historyContribute1.forEach(e => {\n            if (e.time.indexOf(valueMonth) >= 0 || checkAll) {\n                sumBIC += e.bic\n                sumBUSD += e.busd\n                let buyer = e.buyer\n                let busdNumber = e.busd\n                let bicNumber = e.bic\n                let time = e.time\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            }\n        })\n        this.setState({\n            historyFilter1: listBuy,\n            sumBIC1: sumBIC,\n            sumBUSD1: sumBUSD,\n        })\n    }\n\n    async syncHandleChangeFilter2(valueMonth) {\n        let listBuy = []\n        let sumBIC = 0\n        let sumBUSD = 0\n        let checkAll = false\n        if (valueMonth === \"ALL\") {\n            checkAll = true\n        }\n        this.state.historyContribute2.forEach(e => {\n            if (e.time.indexOf(valueMonth) >= 0 || checkAll) {\n                sumBIC += e.bic\n                sumBUSD += e.busd\n                let buyer = e.buyer\n                let busdNumber = e.busd\n                let bicNumber = e.bic\n                let time = e.time\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            }\n        })\n        this.setState({\n            historyFilter2: listBuy,\n            sumBIC2: sumBIC,\n            sumBUSD2: sumBUSD,\n        })\n    }\n\n    async syncHandleChangeFilter3(valueMonth) {\n        let listBuy = []\n        let sumBIC = 0\n        let sumBUSD = 0\n        let checkAll = false\n        if (valueMonth === \"ALL\") {\n            checkAll = true\n        }\n        this.state.historyContribute3.forEach(e => {\n            if (e.time.indexOf(valueMonth) >= 0 || checkAll) {\n                sumBIC += e.bic\n                sumBUSD += e.busd\n                let buyer = e.buyer\n                let busdNumber = e.busd\n                let bicNumber = e.bic\n                let time = e.time\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            }\n        })\n        this.setState({\n            historyFilter3: listBuy,\n            sumBIC3: sumBIC,\n            sumBUSD3: sumBUSD,\n        })\n    }\n\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleChangeFilter1(event) {\n        this.setState({[event.target.name]: event.target.value});\n        await this.syncHandleChangeFilter1(event.target.value);\n    }\n\n    async handleChangeFilter2(event) {\n        this.setState({[event.target.name]: event.target.value});\n        await this.syncHandleChangeFilter2(event.target.value);\n    }\n\n    async handleChangeFilter3(event) {\n        this.setState({[event.target.name]: event.target.value});\n        await this.syncHandleChangeFilter3(event.target.value);\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async addWhiteList() {\n        await this.state.contract.methods.addToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async removeWhiteList() {\n        await this.state.contract.methods.removeToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    showWhitelist() {\n        this.setState({isShowWhitelist: !this.state.isShowWhitelist});\n    }\n\n    showHistoryContribute() {\n        this.setState({isShowHistoryContribute: !this.state.isShowHistoryContribute});\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if (allowance < this.state.buyAmount * 1e18) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async releaseBIC() {\n        await this.state.contract.methods.releaseBic(this.state.releaseWallet).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    formatDatetime(timestamp) {\n        const a = new Date(timestamp * 1000);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate().toString().padStart(2, '0');\n        const hour = a.getHours().toString().padStart(2, '0');\n        const min = a.getMinutes().toString().padStart(2, '0');\n        const sec = a.getSeconds().toString().padStart(2, '0');\n        return date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>Bein contract info</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO\n                        contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.busdAddress}`}>BUSD\n                        contract</a></Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : {display: 'none'}}>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD\n                                = {this.state.rateOutput / this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\"\n                                   value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken}\n                                   onChange={(e) => this.handleChange(e)}>\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Whitelist:</CardTitle>\n                            <Input type=\"string\" name=\"whitelist\" value={this.state.whitelist}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <div>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.addWhiteList()}>Add</Button>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.removeWhiteList()}>Remove</Button>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n                <p>\n                    <Button onClick={() => this.showWhitelist()}>Hide/show whitelist</Button>\n                </p>\n                <Row style={this.state.isShowWhitelist ? {} : {display: 'none'}}>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract1: {this.state.whiteListResult.length}</h3>\n                        <p>Owner: {this.state.ownerContract1}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract2: {this.state.whiteListResult2.length}</h3>\n                        <p>Owner: {this.state.ownerContract2}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult2.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                </Row>\n                <p>\n                    <Button onClick={() => this.showHistoryContribute()}>Hide/show history</Button>\n                </p>\n                <Row style={this.state.isShowHistoryContribute ? {} : {display: 'none'}}>\n                    <Col md=\"4\">\n                        <Input type=\"select\" name=\"filter1\" value={this.state.filter1}\n                               onChange={(e) => this.handleChangeFilter1(e)}>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"Jun\">Jun</option>\n                            <option value=\"Jul\">Jul</option>\n                            <option value=\"Aug\">Aug</option>\n                            <option value=\"Sep\">Sep</option>\n                            <option value=\"Oct\">Oct</option>\n                            <option value=\"Nov\">Nov</option>\n                            <option value=\"Dec\">Dec</option>\n                            <option value=\"Jan\">Jan</option>\n                            <option value=\"Feb\">Feb</option>\n                            <option value=\"Mar\">Mar</option>\n                            <option value=\"Apr\">Apr</option>\n                            <option value=\"May\">May</option>\n                        </Input>\n                        <h3>History contract1: {this.state.historyFilter1.length}</h3>\n                        <p>Owner: {this.state.ownerContract1}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead align=\"right\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>BUSD</th>\n                                        <th>BIC</th>\n                                    </tr>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th></th>\n                                        <th align=\"right\">{this.state.sumBUSD1.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                        <th align=\"right\">{this.state.sumBIC1.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody align=\"right\">\n                                    {this.state.historyFilter1.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.buyer}</td>\n                                        <td align=\"right\">{e.busd.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                        <td align=\"right\">{e.bic.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"4\">\n                        <Input type=\"select\" name=\"filter2\" value={this.state.filter2}\n                               onChange={(e) => this.handleChangeFilter2(e)}>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"Jun\">Jun</option>\n                            <option value=\"Jul\">Jul</option>\n                            <option value=\"Aug\">Aug</option>\n                            <option value=\"Sep\">Sep</option>\n                            <option value=\"Oct\">Oct</option>\n                            <option value=\"Nov\">Nov</option>\n                            <option value=\"Dec\">Dec</option>\n                            <option value=\"Jan\">Jan</option>\n                            <option value=\"Feb\">Feb</option>\n                            <option value=\"Mar\">Mar</option>\n                            <option value=\"Apr\">Apr</option>\n                            <option value=\"May\">May</option>\n                        </Input>\n                        <h3>History contract2: {this.state.historyFilter2.length}</h3>\n                        <p>Owner: {this.state.ownerContract2}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead align=\"right\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>BUSD</th>\n                                        <th>BIC</th>\n                                    </tr>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th></th>\n                                        <th align=\"right\">{this.state.sumBUSD2.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                        <th align=\"right\">{this.state.sumBIC2.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody align=\"right\">\n                                    {this.state.historyFilter2.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.buyer}</td>\n                                        <td>{e.busd.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                        <td>{e.bic.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"4\">\n                        <Input type=\"select\" name=\"filter3\" value={this.state.filter3}\n                               onChange={(e) => this.handleChangeFilter3(e)}>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"Jun\">Jun</option>\n                            <option value=\"Jul\">Jul</option>\n                            <option value=\"Aug\">Aug</option>\n                            <option value=\"Sep\">Sep</option>\n                            <option value=\"Oct\">Oct</option>\n                            <option value=\"Nov\">Nov</option>\n                            <option value=\"Dec\">Dec</option>\n                            <option value=\"Jan\">Jan</option>\n                            <option value=\"Feb\">Feb</option>\n                            <option value=\"Mar\">Mar</option>\n                            <option value=\"Apr\">Apr</option>\n                            <option value=\"May\">May</option>\n                        </Input>\n                        <h3>History contract3: {this.state.historyFilter3.length}</h3>\n                        <p>Owner: {this.state.ownerContract3}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead align=\"right\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>BUSD</th>\n                                        <th>BIC</th>\n                                    </tr>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th></th>\n                                        <th align=\"right\">{this.state.sumBUSD3.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                        <th align=\"right\">{this.state.sumBIC3.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody align=\"right\">\n                                    {this.state.historyFilter3.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.buyer}</td>\n                                        <td>{e.busd.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                        <td>{e.bic.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}