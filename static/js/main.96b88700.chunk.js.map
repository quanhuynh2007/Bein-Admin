{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","bonusCurrent","rateInput","bicUser","busdUser","bicBalance","busdBalance","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","whitelist","adminAddress","currentAddress","soldDetails","receivedDetails","whiteListResult","isAdmin","isShowDetails","isBuyable","releaseWallet","this","syncStaticData","then","syncContractBalance","syncWhiteList","syncChangeableData","syncBuyLogs","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","input","output","owner","adminAddr","bicContract","BeInCoinAbi","busdContract","BEP20Abi","balanceOf","_bicBalance","_busdBalance","utils","fromWei","idoContract","whiteList","console","log","startDecay","deltaDecay","getBlockNumber","blockCurrent","bonus","countDecay","Math","floor","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","Date","amount","bicAmount","user","buyer","busdAmount","topic","axios","get","params","module","action","address","topic0","apikey","response","data","syncTopic","addEvent","mapEvent","Map","addr","substring","parseInt","set","removeEvent","Array","isArray","has","delete","listEvent","entries","keyMap","valueMap","event","target","name","value","updatePrice","send","from","withdraw","transferOwnership","addToWhitelist","removeToWhitelist","allowance","approve","buy","toWei","releaseBic","details","reduce","r","parseFloat","Row","Col","md","Button","onClick","connectWithMetamask","href","Card","body","CardTitle","tag","Input","type","onChange","handleChange","disabled","buyBIC","CardText","style","display","placeholder","addWhiteList","removeWhiteList","toggle","amountReport","Collapse","isOpen","Table","map","index","toString","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b88700.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BeInCoinAbi from \"./abi/BeinChain.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport axios from \"axios\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Collapse, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            bonusCurrent: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            whitelist: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            whiteListResult: [],\n            isAdmin: false,\n            isShowDetails: false,\n            isBuyable: false,\n            releaseWallet: null,\n        }\n    }\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n            this.syncWhiteList()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n    }\n\n    connectWithMetamask() {\n        if(window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({ method: 'eth_requestAccounts' })\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0],\n                        releaseWallet: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n                    if (this.state.adminAddress === this.state.currentAddress) {\n                        this.state.isAdmin = true\n                    } else {\n                        this.state.isAdmin = true\n                    }\n\n                    window.ethereum.on('accountsChanged', function(addresses){\n                        self.setState({\n                            currentAddress: addresses[0],\n                            releaseWallet: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const idoContract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n\n        const whiteList = await idoContract.methods.whitelist(this.state.currentAddress).call()\n        console.log('whiteList: ', whiteList)\n        let startDecay = await idoContract.methods.startDecay().call()\n        let deltaDecay = await idoContract.methods.deltaDecay().call()\n        let blockCurrent = await web3.eth.getBlockNumber()\n        let bonus = 100;\n        if (blockCurrent > startDecay) {\n            let countDecay = Math.floor((blockCurrent - startDecay)/(deltaDecay));\n            if (countDecay < 10) {\n                bonus = 100 - countDecay*10;\n            } else {\n                bonus = 0;\n            }\n        }\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n            bonusCurrent: bonus,\n            isBuyable: whiteList\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', { fromBlock: 'latest', toBlock: 'latest' })\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.bicAmount,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.busdAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    async syncTopic(topic) {\n        try {\n            const response = await axios.get(process.env.REACT_APP_BSC_SCAN_API, {\n            params: {\n                module: \"logs\",\n                action: \"getLogs\",\n                address: process.env.REACT_APP_IDO_CONTRACT,\n                topic0: topic,\n                apikey: process.env.REACT_APP_BSC_SCAN_API_TOKEN,\n            }\n            });\n            return response.data.result;\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async syncWhiteList() {\n        let addEvent = await this.syncTopic('0xaf031152c1a6c5d679409baa43923a71689187e8c73f3e9b156b411d011a1fe0') // add wl\n        let mapEvent=new Map()\n        addEvent.forEach(e => {\n            let data = e.data\n            let addr = '0x' + data.substring(26,66)\n            let time = parseInt('0x' + data.substring(122,131))\n            mapEvent.set(addr, time);\n        })\n        let removeEvent = await this.syncTopic('0x732404ef841efeaff56d1e6eaf5fadebab6b9c973698f5dcee406980b3498f38') // remove wl\n        if (Array.isArray(removeEvent)) {\n            removeEvent.forEach(e => {\n                let data = e.data\n                let addr = '0x' + data.substring(26,66)\n                let time = parseInt('0x' + data.substring(122,131))\n                if (mapEvent.has(addr)) {\n                    let tempTime = mapEvent.get(addr)\n                    if (time > tempTime) {\n                        mapEvent.delete(addr)\n                    }\n                }\n            })\n        }\n        let listEvent = []\n        for (const [keyMap, valueMap] of mapEvent.entries()) {\n            listEvent.push({\n                time: new Date(valueMap * 1000),\n                address: keyMap,\n            })\n        }\n        this.setState({\n            whiteListResult: listEvent,\n        })\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async addWhiteList() {\n        await this.state.contract.methods.addToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n    async removeWhiteList() {\n        await this.state.contract.methods.removeToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if(allowance < this.state.buyAmount*1e18) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async releaseBIC() {\n        await this.state.contract.methods.releaseBic(this.state.releaseWallet).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n        this.syncWhiteList()\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>BeIn IDO page</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.busdAddress}`}>BUSD contract</a></Col>\n                </Row>\n                <Row>\n                    <h2>User:</h2><p>{this.state.currentAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Buy BIC (BUSD):</CardTitle>\n                            <Input name=\"buyAmount\" type=\"number\" value={this.state.buyAmount} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.buyBIC()}>Buy</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Receive:</CardTitle>\n                            <p>{this.state.buyAmount * this.state.rateOutput / this.state.rateInput *(100 + this.state.bonusCurrent)/100 || 0} BIC</p>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Can you buy?</CardTitle>\n                            <p>{this.state.isBuyable ? 'Yes' : 'No'}</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Balance:</CardTitle>\n                            <p>{this.state.bicUser} BIC</p>\n                            <p>{this.state.busdUser} BUSD</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Note:</CardTitle>\n                            <CardText>The first time you buy, we need to request your permission to using your BUSD.</CardText>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : { display: 'none' }}>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD = {this.state.rateOutput/this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput} onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\" value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken} onChange={(e) => this.handleChange(e)} >\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Whitelist:</CardTitle>\n                            <Input type=\"string\" name=\"whitelist\" value={this.state.whitelist} onChange={(e) => this.handleChange(e)}  />\n                            <div>\n                                <Button disabled={!this.state.isConnectWallet} onClick={() => this.addWhiteList()}>Add</Button>\n                                <Button disabled={!this.state.isConnectWallet} onClick={() => this.removeWhiteList()}>Remove</Button>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : {}}>\n                    <Row>\n                        <Col md=\"4\"><h2>IDO info:</h2></Col>\n                        <Col md=\"4\"><Button onClick={() => this.syncBuyLogs()}>Refresh</Button></Col>\n                        <Col md=\"4\"><Button onClick={() => this.toggle()}>Show detail</Button></Col>\n                    </Row>\n                    <Row>\n                        <h3>Total sold BIC:  {this.amountReport(this.state.soldDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Time</th>\n                                            <th>Address</th>\n                                            <th>Amount (BIC)</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.soldDetails.map((e,index) => <tr>\n                                            <th key={'sold' + index}>{index + 1}</th>\n                                            <td>{e.time.toString()}</td>\n                                            <td>{e.user}</td>\n                                            <td>{Web3.utils.fromWei(e.amount)}</td>\n                                        </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                    <Row>\n                        <h3>Total received BUSD: {this.amountReport(this.state.receivedDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>Amount (BUSD)</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.receivedDetails.map((e,index) => <tr>\n                                        <th key={'receive' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.user}</td>\n                                        <td>{Web3.utils.fromWei(e.amount)}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                        <h3>Whitelist: {this.state.whiteListResult.length}</h3>\n                    <Row>\n                        <Card>\n                            <Table>\n                                <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Time</th>\n                                    <th>Address</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {this.state.whiteListResult.map((e,index) => <tr>\n                                    <th key={'address' + index}>{index + 1}</th>\n                                    <td>{e.time.toString()}</td>\n                                    <td>{e.address}</td>\n                                </tr>)}\n                                </tbody>\n                            </Table>\n                        </Card>\n                    </Row>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}