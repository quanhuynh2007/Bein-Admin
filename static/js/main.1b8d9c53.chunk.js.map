{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","bonusCurrent","rateInput","bicUser","busdUser","bicBalance","busdBalance","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","whitelist","adminAddress","currentAddress","soldDetails","receivedDetails","whiteListResult","whiteListResult2","historyContribute1","historyContribute2","historyFilter1","historyFilter2","filter1","filter2","sumBUSD1","sumBIC1","sumBUSD2","sumBIC2","filterTime","ownerContract1","ownerContract2","isAdmin","isShowDetails","isShowWhitelist","isShowHistoryContribute","isBuyable","releaseWallet","this","syncStaticData","then","syncContractBalance","syncWhiteListFull","syncHistoryContributeFull","syncContractInfo","syncChangeableData","syncBuyLogs","syncHandleChangeFilter1","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","input","output","owner","adminAddr","bicContract","BeInCoinAbi","busdContract","BEP20Abi","balanceOf","_bicBalance","_busdBalance","utils","fromWei","contract1","contract2","owner1","owner2","idoContract","whiteList","console","log","startDecay","deltaDecay","getBlockNumber","blockCurrent","bonus","countDecay","Math","floor","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","Date","amount","bicAmount","user","buyer","busdAmount","addressIDO","topic","axios","get","params","module","action","address","topic0","apikey","response","data","syncWhiteList","list1","list2","syncTopic","addEvent","mapEvent","Map","addr","substring","parseInt","set","removeEvent","Array","isArray","has","delete","listEvent","entries","keyMap","valueMap","formatDatetime","syncHistoryContribute","eventBuy","listBuy","busdNumber","bicNumber","busd","bic","valueMonth","sumBIC","sumBUSD","checkAll","indexOf","event","target","name","value","syncHandleChangeFilter2","updatePrice","send","from","withdraw","transferOwnership","addToWhitelist","removeToWhitelist","allowance","approve","buy","toWei","releaseBic","details","reduce","r","parseFloat","timestamp","year","getFullYear","month","getMonth","getDate","toString","padStart","getHours","getMinutes","getSeconds","Row","Col","md","Button","onClick","connectWithMetamask","href","style","display","Card","body","CardTitle","tag","Input","type","placeholder","onChange","handleChange","disabled","CardText","addWhiteList","removeWhiteList","showWhitelist","length","Table","map","index","showHistoryContribute","handleChangeFilter1","align","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleChangeFilter2","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8d9c53.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BeInCoinAbi from \"./abi/BeinChain.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport axios from \"axios\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            bonusCurrent: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            whitelist: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            whiteListResult: [],\n            whiteListResult2: [],\n            historyContribute1: [],\n            historyContribute2: [],\n            historyFilter1: [],\n            historyFilter2: [],\n            filter1: 'ALL',\n            filter2: 'ALL',\n            sumBUSD1: 0,\n            sumBIC1: 0,\n            sumBUSD2: 0,\n            sumBIC2: 0,\n            filterTime: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            ownerContract1: '',\n            ownerContract2: '',\n            isAdmin: false,\n            isShowDetails: false,\n            isShowWhitelist: true,\n            isShowHistoryContribute: false,\n            isBuyable: false,\n            releaseWallet: null,\n        }\n    }\n\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n            this.syncWhiteListFull()\n            this.syncHistoryContributeFull()\n            this.syncContractInfo()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n        this.syncHandleChangeFilter1(\"ALL\")\n    }\n\n    connectWithMetamask() {\n        if (window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({method: 'eth_requestAccounts'})\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0],\n                        releaseWallet: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n                    if (this.state.adminAddress === this.state.currentAddress) {\n                        this.state.isAdmin = true\n                    } else {\n                        this.state.isAdmin = true\n                    }\n\n                    window.ethereum.on('accountsChanged', function (addresses) {\n                        self.setState({\n                            currentAddress: addresses[0],\n                            releaseWallet: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncContractInfo() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract1 = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const contract2 = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT2)\n        let owner1 = await contract1.methods.owner().call()\n        let owner2 = await contract2.methods.owner().call()\n        this.setState({\n            ownerContract1: owner1,\n            ownerContract2: owner2,\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const idoContract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n\n        const whiteList = await idoContract.methods.whitelist(this.state.currentAddress).call()\n        console.log('whiteList: ', whiteList)\n        let startDecay = await idoContract.methods.startDecay().call()\n        let deltaDecay = await idoContract.methods.deltaDecay().call()\n        let blockCurrent = await web3.eth.getBlockNumber()\n        let bonus = 100;\n        if (blockCurrent > startDecay) {\n            let countDecay = Math.floor((blockCurrent - startDecay) / (deltaDecay));\n            if (countDecay < 10) {\n                bonus = 100 - countDecay * 10;\n            } else {\n                bonus = 0;\n            }\n        }\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n            bonusCurrent: bonus,\n            isBuyable: whiteList\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', {fromBlock: 'latest', toBlock: 'latest'})\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.bicAmount,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.busdAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    async syncTopic(addressIDO, topic) {\n        try {\n            const response = await axios.get(process.env.REACT_APP_BSC_SCAN_API, {\n                params: {\n                    module: \"logs\",\n                    action: \"getLogs\",\n                    address: addressIDO,\n                    topic0: topic,\n                    apikey: process.env.REACT_APP_BSC_SCAN_API_TOKEN,\n                }\n            });\n            return response.data.result;\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async syncWhiteListFull() {\n        let list1 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT)\n        let list2 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT2)\n        this.setState({\n            whiteListResult: list1,\n            whiteListResult2: list2,\n        })\n    }\n\n    async syncWhiteList(addressIDO) {\n        let addEvent = await this.syncTopic(addressIDO, '0xaf031152c1a6c5d679409baa43923a71689187e8c73f3e9b156b411d011a1fe0') // add wl\n        let mapEvent = new Map()\n        addEvent.forEach(e => {\n            let data = e.data\n            let addr = '0x' + data.substring(26, 66)\n            let time = parseInt('0x' + data.substring(122, 131))\n            mapEvent.set(addr, time);\n        })\n        let removeEvent = await this.syncTopic(addressIDO, '0x732404ef841efeaff56d1e6eaf5fadebab6b9c973698f5dcee406980b3498f38') // remove wl\n        if (Array.isArray(removeEvent)) {\n            removeEvent.forEach(e => {\n                let data = e.data\n                let addr = '0x' + data.substring(26, 66)\n                let time = parseInt('0x' + data.substring(122, 131))\n                if (mapEvent.has(addr)) {\n                    let tempTime = mapEvent.get(addr)\n                    if (time > tempTime) {\n                        mapEvent.delete(addr)\n                    }\n                }\n            })\n        }\n        let listEvent = []\n        for (const [keyMap, valueMap] of mapEvent.entries()) {\n            listEvent.push({\n                time: this.formatDatetime(valueMap),\n                address: keyMap,\n            })\n        }\n        return listEvent;\n    }\n\n    async syncHistoryContributeFull() {\n        let list1 = await this.syncHistoryContribute(process.env.REACT_APP_IDO_CONTRACT)\n        let list2 = await this.syncHistoryContribute(process.env.REACT_APP_IDO_CONTRACT2)\n        this.setState({\n            historyContribute1: list1,\n            historyContribute2: list2,\n        })\n    }\n\n    async syncHistoryContribute(addressIDO) {\n        let eventBuy = await this.syncTopic(addressIDO, '0xebdbbd9ad9f8301392fafec9c34b3d92288ebfc5a5811c398b9ba01ce36e1590') // buy\n        let listBuy = []\n        eventBuy.forEach(e => {\n            let data = e.data\n            let buyer = '0x' + data.substring(26, 66)\n            let busdNumber = parseInt('0x' + data.substring(67, 130)) / (1e18)\n            let bicNumber = parseInt('0x' + data.substring(131, 194)) / (1e18)\n            let time = this.formatDatetime(parseInt('0x' + data.substring(249, 258)))\n            listBuy.push({\n                buyer: buyer,\n                busd: busdNumber,\n                bic: bicNumber,\n                time: time,\n            })\n        })\n        return listBuy\n    }\n\n    async syncHandleChangeFilter1(valueMonth) {\n        let listBuy = []\n        let sumBIC = 0\n        let sumBUSD = 0\n        let checkAll = false\n        if (valueMonth === \"ALL\") {\n            checkAll = true\n        }\n        this.state.historyContribute1.forEach(e => {\n            if (e.time.indexOf(valueMonth) >= 0 || checkAll) {\n                sumBIC += e.bic\n                sumBUSD += e.busd\n                let buyer = e.buyer\n                let busdNumber = e.busd\n                let bicNumber = e.bic\n                let time = e.time\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            }\n        })\n        this.setState({\n            historyFilter1: listBuy,\n            sumBIC1: sumBIC,\n            sumBUSD1: sumBUSD,\n        })\n    }\n\n    async syncHandleChangeFilter2(valueMonth) {\n        let listBuy = []\n        let sumBIC = 0\n        let sumBUSD = 0\n        let checkAll = false\n        if (valueMonth === \"ALL\") {\n            checkAll = true\n        }\n        this.state.historyContribute2.forEach(e => {\n            if (e.time.indexOf(valueMonth) >= 0 || checkAll) {\n                sumBIC += e.bic\n                sumBUSD += e.busd\n                let buyer = e.buyer\n                let busdNumber = e.busd\n                let bicNumber = e.bic\n                let time = e.time\n                listBuy.push({\n                    buyer: buyer,\n                    busd: busdNumber,\n                    bic: bicNumber,\n                    time: time,\n                })\n            }\n        })\n        this.setState({\n            historyFilter2: listBuy,\n            sumBIC2: sumBIC,\n            sumBUSD2: sumBUSD,\n        })\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleChangeFilter1(event) {\n        this.setState({[event.target.name]: event.target.value});\n        await this.syncHandleChangeFilter1(event.target.value);\n    }\n\n    async handleChangeFilter2(event) {\n        this.setState({[event.target.name]: event.target.value});\n        await this.syncHandleChangeFilter2(event.target.value);\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async addWhiteList() {\n        await this.state.contract.methods.addToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async removeWhiteList() {\n        await this.state.contract.methods.removeToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    showWhitelist() {\n        this.setState({isShowWhitelist: !this.state.isShowWhitelist});\n    }\n\n    showHistoryContribute() {\n        this.setState({isShowHistoryContribute: !this.state.isShowHistoryContribute});\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if (allowance < this.state.buyAmount * 1e18) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async releaseBIC() {\n        await this.state.contract.methods.releaseBic(this.state.releaseWallet).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    formatDatetime(timestamp) {\n        const a = new Date(timestamp * 1000);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate().toString().padStart(2, '0');\n        const hour = a.getHours().toString().padStart(2, '0');\n        const min = a.getMinutes().toString().padStart(2, '0');\n        const sec = a.getSeconds().toString().padStart(2, '0');\n        return date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>Bein contract info</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO\n                        contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.busdAddress}`}>BUSD\n                        contract</a></Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : {display: 'none'}}>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD\n                                = {this.state.rateOutput / this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\"\n                                   value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken}\n                                   onChange={(e) => this.handleChange(e)}>\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Whitelist:</CardTitle>\n                            <Input type=\"string\" name=\"whitelist\" value={this.state.whitelist}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <div>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.addWhiteList()}>Add</Button>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.removeWhiteList()}>Remove</Button>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n                <p>\n                    <Button onClick={() => this.showWhitelist()}>Hide/show whitelist</Button>\n                </p>\n                <Row style={this.state.isShowWhitelist ? {} : {display: 'none'}}>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract1: {this.state.whiteListResult.length}</h3>\n                        <p>Owner: {this.state.ownerContract1}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract2: {this.state.whiteListResult2.length}</h3>\n                        <p>Owner: {this.state.ownerContract2}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult2.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                </Row>\n                <p>\n                    <Button onClick={() => this.showHistoryContribute()}>Hide/show history</Button>\n                </p>\n                <Row style={this.state.isShowHistoryContribute ? {} : {display: 'none'}}>\n                    <Col md=\"6\">\n                        <Input type=\"select\" name=\"filter1\" value={this.state.filter1}\n                               onChange={(e) => this.handleChangeFilter1(e)}>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"Jun\">Jun</option>\n                            <option value=\"Jul\">Jul</option>\n                            <option value=\"Aug\">Aug</option>\n                            <option value=\"Sep\">Sep</option>\n                            <option value=\"Oct\">Oct</option>\n                            <option value=\"Nov\">Nov</option>\n                            <option value=\"Dec\">Dec</option>\n                            <option value=\"Jan\">Jan</option>\n                            <option value=\"Feb\">Feb</option>\n                            <option value=\"Mar\">Mar</option>\n                            <option value=\"Apr\">Apr</option>\n                            <option value=\"May\">May</option>\n                        </Input>\n                        <h3>History contract1: {this.state.historyFilter1.length}</h3>\n                        <p>Owner: {this.state.ownerContract1}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead align=\"right\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>BUSD</th>\n                                        <th>BIC</th>\n                                    </tr>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th></th>\n                                        <th align=\"right\">{this.state.sumBUSD1.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                        <th align=\"right\">{this.state.sumBIC1.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody align=\"right\">\n                                    {this.state.historyFilter1.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.buyer}</td>\n                                        <td align=\"right\">{e.busd.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                        <td align=\"right\">{e.bic.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"6\">\n                        <Input type=\"select\" name=\"filter2\" value={this.state.filter2}\n                               onChange={(e) => this.handleChangeFilter2(e)}>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"Jun\">Jun</option>\n                            <option value=\"Jul\">Jul</option>\n                            <option value=\"Aug\">Aug</option>\n                            <option value=\"Sep\">Sep</option>\n                            <option value=\"Oct\">Oct</option>\n                            <option value=\"Nov\">Nov</option>\n                            <option value=\"Dec\">Dec</option>\n                            <option value=\"Jan\">Jan</option>\n                            <option value=\"Feb\">Feb</option>\n                            <option value=\"Mar\">Mar</option>\n                            <option value=\"Apr\">Apr</option>\n                            <option value=\"May\">May</option>\n                        </Input>\n                        <h3>History contract2: {this.state.historyFilter2.length}</h3>\n                        <p>Owner: {this.state.ownerContract2}</p>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead align=\"right\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>BUSD</th>\n                                        <th>BIC</th>\n                                    </tr>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th></th>\n                                        <th align=\"right\">{this.state.sumBUSD2.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                        <th align=\"right\">{this.state.sumBIC2.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody align=\"right\">\n                                    {this.state.historyFilter2.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.buyer}</td>\n                                        <td>{e.busd.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                        <td>{e.bic.toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 2\n                                        })}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}