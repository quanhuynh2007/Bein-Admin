{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","rateInput","bicUser","busdUser","bicBalance","busdBalance","lbicUser","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","whitelist","adminAddress","currentAddress","soldDetails","receivedDetails","isShowDetails","isBuyable","releaseWallet","releaseTime","this","syncStaticData","then","syncContractBalance","syncChangeableData","syncBuyLogs","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","Date","toString","input","output","owner","adminAddr","bicContract","BEP20Abi","busdContract","balanceOf","_bicBalance","_busdBalance","utils","fromWei","lbicContract","_lbicBalance","whiteList","console","log","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","amount","bicAmount","user","buyer","busdAmount","event","target","name","value","updatePrice","send","from","withdraw","transferOwnership","addToWhitelist","allowance","toWei","approve","buy","releaseBic","details","reduce","r","parseFloat","Row","Col","md","Button","onClick","connectWithMetamask","href","Card","body","CardTitle","tag","Input","type","onChange","handleChange","disabled","buyBIC","releaseBIC","CardText","placeholder","addWhiteList","toggle","amountReport","Collapse","isOpen","Table","map","index","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2cfd5a.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Collapse, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            lbicUser: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            whitelist: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            isShowDetails: false,\n            isBuyable: false,\n            releaseWallet: null,\n            releaseTime: null\n        }\n    }\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n    }\n\n    connectWithMetamask() {\n        if(window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({ method: 'eth_requestAccounts' })\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0],\n                        releaseWallet: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n\n                    window.ethereum.on('accountsChanged', function(addresses){\n                        self.setState({\n                            currentAddress: addresses[0],\n                            releaseWallet: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        const releaseTime = await contract.methods.releaseTime().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr,\n            releaseTime: new Date(releaseTime*1000).toString()\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BEP20Abi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BEP20Abi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const lbicContract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n        const _lbicBalance = await lbicContract.methods.balanceOf(this.state.currentAddress).call()\n\n        const whiteList = await lbicContract.methods.whitelist(this.state.currentAddress).call()\n        console.log('whiteList: ', whiteList)\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n            lbicUser: Web3.utils.fromWei(_lbicBalance),\n            isBuyable: whiteList\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', { fromBlock: 0, toBlock: 'latest' })\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.bicAmount,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.busdAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async addWhiteList() {\n        await this.state.contract.methods.addToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if(allowance < Web3.utils.toWei(this.state.buyAmount)) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async releaseBIC() {\n        await this.state.contract.methods.releaseBic(this.state.releaseWallet).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>BeIn IDO page</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO contract</a></Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${this.state.busdAddress}`}>BUSD contract</a></Col>\n                </Row>\n                <Row>\n                    <h2>User:</h2><p>{this.state.currentAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Buy BIC (BUSD):</CardTitle>\n                            <Input name=\"buyAmount\" type=\"number\" value={this.state.buyAmount} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.buyBIC()}>Buy</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Release BIC:</CardTitle>\n                            <Input name=\"releaseWallet\" type=\"text\" value={this.state.releaseWallet} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.releaseBIC()}>Buy</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Receive:</CardTitle>\n                            <p>{this.state.buyAmount * this.state.rateOutput / this.state.rateInput || 0} BIC</p>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Can you buy?</CardTitle>\n                            <p>{this.state.isBuyable ? 'Yes' : 'No'}</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Balance:</CardTitle>\n                            <p>{this.state.bicUser} BIC</p>\n                            <p>{this.state.busdUser} BUSD</p>\n                            <p>{this.state.lbicUser} LBIC</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Note:</CardTitle>\n                            <CardText>The first time you buy, we need to request your permission to using your BUSD.</CardText>\n                            <CardText>You can release your BIC after {this.state.releaseTime}.</CardText>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD = {this.state.rateOutput/this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput} onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\" value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken} onChange={(e) => this.handleChange(e)} >\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Whitelist:</CardTitle>\n                            <Input type=\"string\" name=\"whitelist\" value={this.state.whitelist} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.addWhiteList()}>Add</Button>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Row>\n                        <Col md=\"4\"><h2>IDO info:</h2></Col>\n                        <Col md=\"4\"><Button onClick={() => this.syncBuyLogs()}>Refresh</Button></Col>\n                        <Col md=\"4\"><Button onClick={() => this.toggle()}>Show detail</Button></Col>\n                    </Row>\n                    <Row>\n                        <h3>Total sold BIC:  {this.amountReport(this.state.soldDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Time</th>\n                                            <th>Address</th>\n                                            <th>Amount (BIC)</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.soldDetails.map((e,index) => <tr>\n                                            <th key={'sold' + index}>{index + 1}</th>\n                                            <td>{e.time.toString()}</td>\n                                            <td>{e.user}</td>\n                                            <td>{Web3.utils.fromWei(e.amount)}</td>\n                                        </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                    <Row>\n                        <h3>Total received BUSD: {this.amountReport(this.state.receivedDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>Amount (BUSD)</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.receivedDetails.map((e,index) => <tr>\n                                        <th key={'receive' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.user}</td>\n                                        <td>{Web3.utils.fromWei(e.amount)}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}