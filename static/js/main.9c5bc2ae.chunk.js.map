{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","bonusCurrent","rateInput","bicUser","busdUser","bicBalance","busdBalance","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","whitelist","adminAddress","currentAddress","soldDetails","receivedDetails","whiteListResult","whiteListResult2","isAdmin","isShowDetails","isBuyable","releaseWallet","this","syncStaticData","then","syncContractBalance","syncWhiteListFull","syncChangeableData","syncBuyLogs","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","input","output","owner","adminAddr","bicContract","BeInCoinAbi","busdContract","BEP20Abi","balanceOf","_bicBalance","_busdBalance","utils","fromWei","idoContract","whiteList","console","log","startDecay","deltaDecay","getBlockNumber","blockCurrent","bonus","countDecay","Math","floor","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","Date","amount","bicAmount","user","buyer","busdAmount","addressIDO","topic","axios","get","params","module","action","address","topic0","apikey","response","data","syncWhiteList","list1","list2","syncTopic","addEvent","mapEvent","Map","addr","substring","parseInt","set","removeEvent","Array","isArray","has","delete","listEvent","entries","keyMap","valueMap","formatDatetime","event","target","name","value","updatePrice","send","from","withdraw","transferOwnership","addToWhitelist","removeToWhitelist","allowance","approve","buy","toWei","releaseBic","details","reduce","r","parseFloat","timestamp","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","Row","Col","md","Button","onClick","connectWithMetamask","href","style","display","Card","body","CardTitle","tag","Input","type","placeholder","onChange","handleChange","disabled","CardText","addWhiteList","removeWhiteList","length","Table","map","index","toString","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5bc2ae.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BeInCoinAbi from \"./abi/BeinChain.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport axios from \"axios\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Collapse, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            bonusCurrent: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            whitelist: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            whiteListResult: [],\n            whiteListResult2: [],\n            isAdmin: false,\n            isShowDetails: false,\n            isBuyable: false,\n            releaseWallet: null,\n        }\n    }\n\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n            this.syncWhiteListFull()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n    }\n\n    connectWithMetamask() {\n        if (window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({method: 'eth_requestAccounts'})\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0],\n                        releaseWallet: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n                    if (this.state.adminAddress === this.state.currentAddress) {\n                        this.state.isAdmin = true\n                    } else {\n                        this.state.isAdmin = true\n                    }\n\n                    window.ethereum.on('accountsChanged', function (addresses) {\n                        self.setState({\n                            currentAddress: addresses[0],\n                            releaseWallet: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BeInCoinAbi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const idoContract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n\n        const whiteList = await idoContract.methods.whitelist(this.state.currentAddress).call()\n        console.log('whiteList: ', whiteList)\n        let startDecay = await idoContract.methods.startDecay().call()\n        let deltaDecay = await idoContract.methods.deltaDecay().call()\n        let blockCurrent = await web3.eth.getBlockNumber()\n        let bonus = 100;\n        if (blockCurrent > startDecay) {\n            let countDecay = Math.floor((blockCurrent - startDecay) / (deltaDecay));\n            if (countDecay < 10) {\n                bonus = 100 - countDecay * 10;\n            } else {\n                bonus = 0;\n            }\n        }\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n            bonusCurrent: bonus,\n            isBuyable: whiteList\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', {fromBlock: 'latest', toBlock: 'latest'})\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.bicAmount,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time * 1000),\n                amount: result.busdAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    async syncTopic(addressIDO, topic) {\n        try {\n            const response = await axios.get(process.env.REACT_APP_BSC_SCAN_API, {\n                params: {\n                    module: \"logs\",\n                    action: \"getLogs\",\n                    address: addressIDO,\n                    topic0: topic,\n                    apikey: process.env.REACT_APP_BSC_SCAN_API_TOKEN,\n                }\n            });\n            return response.data.result;\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async syncWhiteListFull(){\n        let list1 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT)\n        let list2 = await this.syncWhiteList(process.env.REACT_APP_IDO_CONTRACT2)\n        this.setState({\n            whiteListResult: list1,\n            whiteListResult2: list2,\n        })\n    }\n\n    async syncWhiteList(addressIDO) {\n        let addEvent = await this.syncTopic(addressIDO, '0xaf031152c1a6c5d679409baa43923a71689187e8c73f3e9b156b411d011a1fe0') // add wl\n        let mapEvent = new Map()\n        addEvent.forEach(e => {\n            let data = e.data\n            let addr = '0x' + data.substring(26, 66)\n            let time = parseInt('0x' + data.substring(122, 131))\n            mapEvent.set(addr, time);\n        })\n        let removeEvent = await this.syncTopic(addressIDO, '0x732404ef841efeaff56d1e6eaf5fadebab6b9c973698f5dcee406980b3498f38') // remove wl\n        if (Array.isArray(removeEvent)) {\n            removeEvent.forEach(e => {\n                let data = e.data\n                let addr = '0x' + data.substring(26, 66)\n                let time = parseInt('0x' + data.substring(122, 131))\n                if (mapEvent.has(addr)) {\n                    let tempTime = mapEvent.get(addr)\n                    if (time > tempTime) {\n                        mapEvent.delete(addr)\n                    }\n                }\n            })\n        }\n        let listEvent = []\n        for (const [keyMap, valueMap] of mapEvent.entries()) {\n            listEvent.push({\n                time: this.formatDatetime(valueMap),\n                address: keyMap,\n            })\n        }\n        return listEvent;\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async addWhiteList() {\n        await this.state.contract.methods.addToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async removeWhiteList() {\n        await this.state.contract.methods.removeToWhitelist(this.state.whitelist).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if (allowance < this.state.buyAmount * 1e18) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async releaseBIC() {\n        await this.state.contract.methods.releaseBic(this.state.releaseWallet).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    formatDatetime(timestamp) {\n        const a = new Date(timestamp * 1000);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        return date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>Bein contract info</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO\n                        contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://bscscan.com/address/${this.state.busdAddress}`}>BUSD\n                        contract</a></Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : {display: 'none'}}>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD\n                                = {this.state.rateOutput / this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\"\n                                   value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken}\n                                   onChange={(e) => this.handleChange(e)}>\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet}\n                                    onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                        <Card body>\n                            <CardTitle tag=\"h3\">Whitelist:</CardTitle>\n                            <Input type=\"string\" name=\"whitelist\" value={this.state.whitelist}\n                                   onChange={(e) => this.handleChange(e)}/>\n                            <div>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.addWhiteList()}>Add</Button>\n                                <Button disabled={!this.state.isConnectWallet}\n                                        onClick={() => this.removeWhiteList()}>Remove</Button>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row style={this.state.isAdmin ? {} : {}}>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract1: {this.state.whiteListResult.length}</h3>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                    <Col md=\"6\">\n                        <h3>Whitelist contract2: {this.state.whiteListResult2.length}</h3>\n                        <Row>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.whiteListResult2.map((e, index) => <tr>\n                                        <th key={'address' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.address}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}